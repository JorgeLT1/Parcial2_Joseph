@page "/paquete"
@page "/paquete/{paqueteId:int}"

<PageTitle>Productos</PageTitle>

@inject PaqueteBLL paqueteBLL
@inject ProductosBLL ProductosBLL

<EditForm Model="paquete" OnValidSubmit="Guardar">
    <DataAnnotationsValidator />
    <div class="card">
        <div class="card-header">
            <h1> Registo de paquete</h1>
        </div>

        <div class="card-body">
            @*PaqueteId*@
            <div class="form-group">
                <label>PaqueteId: </label><br>
                <InputNumber @bind-Value="paquete.PaqueteId" class="form-control" /> <br>
                <button type="button" class="btn btn-primary input-group-text" @onclick="Buscar"><i
                        class="oi oi-magnifying-glass" /> Buscar</button>
            </div>

            @*NombreCliente*@
            <div class="form-group">
                <label>NombreCliente: </label><br>
                <InputText @bind-Value="paquete.NombreCliente" class="form-control" />
                <ValidationMessage For="@(() => paquete.NombreCliente)" />
            </div>

            @*Fecha*@
            <div class="form-group">
                <label>Fecha: </label><br>
                <InputDate @bind-Value="paquete.Fecha" class="form-control" />
                <ValidationMessage For="@(() => paquete.Fecha)" />
            </div>



            @*--- Pago detalle ---*@
            <div class="card">
                <div class="card-header">
                    <h1>Detalle</h1>
                </div>

                @*Existencia*@
                <div class="form-group">
                    <label>Existencia: </label><br>
                    <InputNumber @bind-Value="productos.Existencia" class="form-control" />
                    <ValidationMessage For="@(() => productos.Existencia)" />
                </div>

                @*Boton*@
                <div class="card-footer">
                    <div class="form-group text-center" display: inline-block>
                        <button type="button" class="btn btn-lg btn-primary" @onclick="AgregarDetalle"><i
                                class="oi oi-file" /> Agregar </button>
                    </div>
                </div>

                @*Tabla----*@
                <div class="container">
                    <table class="table table-hover">
                        <thead class="thead-dark">
                            <tr>
                                <th>Descripcion</th>
                                <th>Costo</th>
                                <th>Precio</th>
                            </tr>
                        </thead>
                        <tbody>
                            @foreach (var item in paquete.Productos)
                            {
                                <tr>
                                    <td>@item.Descripcion</td>
                                    <td>@item.Costo</td>
                                    <td>@item.Precio</td>
                                </tr>
                            }
                        </tbody>
                    </table>
                </div>
            </div>
        </div>
        <div class="card-footer">
            <div class="form-group text-center" display: inline-block>
                <button type="button" class="btn btn-lg btn-primary" @onclick="Nuevo"><i class="oi oi-file" /> Nuevo
                </button>
                <button type="submit" class="btn btn-lg btn-success"><i class="oi oi-document" /> Guardar </button>
                <button type="button" class="btn btn-lg btn-danger" @onclick="Eliminar"><i class="oi oi-trash" />
                    Eliminar </button>
            </div>
        </div>
    </div>

</EditForm>

@code {
    [Parameter]
    public int PaqueteId { get; set; }

    public Paquete paquete { get; set; } = new Paquete();

    public Productos productos { get; set; } = new Productos();


    protected override void OnInitialized()
    {
        if (PaqueteId > 0)
        {

            this.paquete.PaqueteId = PaqueteId;
            this.Buscar();
        }
    }

    public void Nuevo()
    {
        paquete = new Paquete();
    }

    bool Validar()
    {
        if (!String.IsNullOrEmpty(paquete.NombreCliente))
        {
            return true;
        }

        return false;
    }


    void Guardar()
    {
        if (!Validar()) { return; }

        if (paqueteBLL.Guardar(this.paquete))
        {
            this.Nuevo();
        }
    }

    private void Buscar()
    {
        if (paquete.PaqueteId > 0)
        {
            var encontrado = paqueteBLL.Buscar(paquete.PaqueteId);

            if (encontrado != null)
                this.paquete = encontrado;

        }
    }

    public void Eliminar()
    {
        if (paqueteBLL.Eliminar(paquete.PaqueteId))
        {
            Nuevo();
        }
        else
        {
            return;
        }
    }


    void AgregarDetalle()
    {
        paquete.Productos.Add(this.productos);
        productos = new Productos();
    }
}